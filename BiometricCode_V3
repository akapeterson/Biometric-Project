import time 
import hashlib
from pyfingerprint.pyfingerprint import PyFingerprint
import Adafruit_CharLCD as LCD

lcd_rs = 25
lcd_en = 24
lcd_d4 = 23
lcd_d5 = 17
lcd_d6 = 18
lcd_d7 = 22
lcd_backlight = 2

# Define LCD column and row size for 16x2 LCD.
lcd_columns = 16
lcd_rows = 2
lcd = LCD.Adafruit_CharLCD(lcd_rs, lcd_en, lcd_d4, lcd_d5, lcd_d6, lcd_d7, lcd_columns, lcd_rows, lcd_backlight)
## Search for a finger
##
## Tries to initialize the sensor
try:
    f = PyFingerprint('/dev/ttyUSB0', 57600, 0xFFFFFFFF, 0x00000000)

    if ( f.verifyPassword() == False ):
        raise ValueError('The given fingerprint sensor password is wrong!')

except Exception as e:
    print('The fingerprint sensor could not be initialized!')
    print('Exception message: ' + str(e))
    exit(1)

## Gets some sensor information
print('Currently used templates: ' + str(f.getTemplateCount()) +'/'+ str(f.getStorageCapacity()))

## Tries to search the finger and calculate hash
def searchFinger():
    try:
        for i in range (3, 0, -1):
            Begin()
            while ( f.readImage() == False ):
                pass
            ## Wait that finger is read        
            ## Converts read image to characteristics and stores it in charbuffer 1
            f.convertImage(0x01)

            ## Searchs template
            result = f.searchTemplate()
            positionNumber = result[0]
            accuracyScore = result[1]
            attempt = positionNumber
            if (attempt == -1):
                lcd.clear()
                lcd.message('''No Fingerprint
match found!''')
                time.sleep(2.0)
                lcd.clear()
                lcd.message('Access Denied!')
                time.sleep(2.0)
                lcd.clear()
                lcd.message('Try Again')
                time.sleep(2.0)
                #Begin()
                #searchFinger()
            else:
                lcd.clear()
                lcd.message('''System Unlocked!
Access Granded''')
                time.sleep(5.0)
                Begin()
                searchFinger()
        if i == 1:
            lcd.clear()
            lcd.message("Attempts Exhaused")
            time.sleep(5.0)
        else:
            lcd.clear()
            lcd.message("works2")
            time.sleep(5.0)
        ## OPTIONAL stuff
        ##
        ## Loads the found template to charbuffer 1
        f.loadTemplate(positionNumber, 0x01)

        ## Downloads the characteristics of template loaded in charbuffer 1
        characterics = str(f.downloadCharacteristics(0x01)).encode('utf-8')

    except Exception as e:
        print('Operation failed!')
        print('Exception message: ' + str(e))
        Begin()
        searchFinger()
        exit(1)
        
def Begin():
    lcd.clear()
    lcd.message('System Locked!')
    time.sleep(0.2)
    lcd.clear()
    time.sleep(0.5)
    lcd.message('System Locked!')
    time.sleep(0.2)
    lcd.clear()
    time.sleep(0.5)
    lcd.message('System Locked!')
    time.sleep(0.2)
    lcd.clear()
    time.sleep(0.5)
    lcd.message('''Waiting for
Finger Placement''')
    time.sleep(0.1)
    
while True:
    Begin()    
    searchFinger()
